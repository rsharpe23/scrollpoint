{"version":3,"sources":["jquery.scrollpoint.js"],"names":["$","ScrollPointListener","sPoint","options","_eventAccess","events","data","forEach","event","trigger","success","_tryAccessEvent","call","$element","isEntry","newEventAccess","height","offset","parseInt","ScrollPoint","listeners","window","on","_execute","bind","DOMRect","getBoundingClientRect","wHeight","innerHeight","scrollDelta","_DOMRect","top","listener","index","calcOffset","triggerAll","once","setTimeout","splice","push","FullPageScrollPoint","args","DATA_KEY","fn","scrollpoint","each","element","instance","addListener"],"mappings":"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","file":"jquery.scrollpoint.js","sourcesContent":["(function ($) {\n  'use strict';\n\n  class ScrollPointListener {\r\n    constructor(sPoint, options) {\r\n      this.sPoint = sPoint;\r\n      this.options = options;\r\n      this._eventAccess = 1;\r\n    }\r\n\r\n    triggerAll(events, data) {\r\n      events.forEach(event => this.trigger(event, data));\r\n    }\r\n\r\n    trigger(event, data) {\r\n      const success = this._tryAccessEvent(event);\r\n\r\n      if (success) {\r\n        this.options[event] && this.options[event]\r\n          .call(this.sPoint.$element[0], data);\r\n      }\r\n\r\n      return success;\r\n    }\r\n\r\n    _tryAccessEvent(event) {\r\n      if (event == 'stay') {\r\n        return true;\r\n      }\r\n\r\n      if (event == 'enter' || event == 'exit') {\r\n        const isEntry = (event == 'enter');\r\n\r\n        let newEventAccess = isEntry ? this._eventAccess\r\n          : ~this._eventAccess;\r\n\r\n        newEventAccess &= 1;\r\n\r\n        if (newEventAccess) {\r\n          isEntry ? (this._eventAccess <<= 1)\r\n            : (this._eventAccess >>>= 1);\r\n        }\r\n\r\n        return !!newEventAccess;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    calcOffset(height) {\r\n      let offset = this.options.offset || 0;\r\n\r\n      if (typeof offset == 'string') {\r\n        offset = parseInt(offset);\r\n      }\r\n\r\n      return height * offset * 0.01;\r\n    }\r\n  }\n\n  class ScrollPoint {\r\n    constructor($element) {\r\n      this.$element = $element;\r\n      this.listeners = [];\r\n      $(window).on('scroll resize', this._execute.bind(this));\r\n    }\r\n\r\n    refresh() {\r\n      this._execute();\r\n    }\r\n\r\n    // _execute() {\r\n    //   const DOMRect = this.$element[0].getBoundingClientRect();\r\n\r\n    //   if (this._DOMRect) {\r\n    //     const wHeight = window.innerHeight;\r\n    //     const data = { scrollDelta: this._DOMRect.top - DOMRect.top };\r\n\r\n    //     this.listeners.forEach((listener, index) => {\r\n    //       const offset = listener.calcOffset(wHeight);\r\n\r\n    //       // Устанавлить offset стоит только для верхней стороны, \r\n    //       // иначе на маленьких элементах будет неправильный расчет соотношений.\r\n    //       if ((DOMRect.top + offset) < wHeight && (DOMRect.top + DOMRect.height) > 0) {\r\n    //         listener.triggerAll(['enter', 'stay'], data);\r\n    //       } else {\r\n    //         if (listener.trigger('exit', data) && listener.options.once) {\r\n    //           // HACK: Т.к. метод вызывается в процессе цикла,\r\n    //           // необходимо чтобы текущий listener удалялся после его завершения.\r\n    //           // setTimeout(..., 0) вызывает переданную функцию только\r\n    //           // после завершения выполнения текущего кода.\r\n    //           setTimeout(() => this.listeners.splice(index, 1));\r\n    //         }\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   this._DOMRect = DOMRect;\r\n    // }\r\n\r\n    _execute() {\r\n      const DOMRect = this.$element[0].getBoundingClientRect();\r\n      const wHeight = window.innerHeight;\r\n\r\n      const data = { \r\n        scrollDelta: this._DOMRect \r\n          ? this._DOMRect.top - DOMRect.top : 0,\r\n      };\r\n\r\n      this.listeners.forEach((listener, index) => {\r\n        const offset = listener.calcOffset(wHeight);\r\n\r\n        // Устанавлить offset стоит только для верхней стороны, \r\n        // иначе на маленьких элементах будет неправильный расчет соотношений.\r\n        if ((DOMRect.top + offset) < wHeight && (DOMRect.top + DOMRect.height) > 0) {\r\n          listener.triggerAll(['enter', 'stay'], data);\r\n        } else {\r\n          if (listener.trigger('exit', data) && listener.options.once) {\r\n            // HACK: Т.к. метод вызывается в процессе цикла,\r\n            // необходимо чтобы текущий listener удалялся после его завершения.\r\n            // setTimeout(..., 0) вызывает переданную функцию только\r\n            // после завершения выполнения текущего кода.\r\n            setTimeout(() => this.listeners.splice(index, 1));\r\n          }\r\n        }\r\n      });\r\n\r\n      this._DOMRect = DOMRect;\r\n    }\r\n\r\n    addListener(options) {\r\n      this.listeners.push(\r\n        new ScrollPointListener(this, options)\r\n      );\r\n    }\r\n  }\n\n  class FullPageScrollPoint extends ScrollPoint {\r\n    constructor(...args) {\r\n      super(...args); // super() должен вызываться перед первым this\r\n\r\n      // Подписываться на this.$element неверно, т.к.\r\n      // scrollPoint может быть не только экран но элемент внутри экрана.\r\n      $('.fp-container:first')\r\n        .on('fullpagescroll', this._execute.bind(this));\r\n    }\r\n  }\n\n  const DATA_KEY = 'rsh.scrollpoint';\r\n\r\n  // Здесь используется функциональное выражение вместо\r\n  // стрелочной функций, т.к. та не имеет своего this\r\n  $.fn.scrollpoint = function (options) {\r\n    return this.each((index, element) => {\r\n      const $element = $(element);\r\n      let instance = $element.data(DATA_KEY);\r\n\r\n      if (!instance) {\r\n        $element.data(\r\n          DATA_KEY,\r\n          instance = new FullPageScrollPoint($element)\r\n        );\r\n      }\r\n\r\n      instance.addListener(options);\r\n    });\r\n  };\n\n}($));\n"]}